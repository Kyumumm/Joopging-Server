plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    //Jwt
    implementation(group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2')
    runtimeOnly(group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2')
    runtimeOnly(group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2')

    //문자 메세지용
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'net.nurigo:javaSDK:2.2'
    implementation fileTree(dir: 'library/sms',includes: ['*.jar'])

    //Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    
    //jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    
    //health check 기능
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //logback to slack
    implementation 'com.github.maricn:logback-slack-appender:1.4.0'

    //sentry
    implementation 'io.sentry:sentry-spring-boot-starter:5.4.0'
    implementation 'io.sentry:sentry-logback:5.4.0'
}



test {
    useJUnitPlatform()
}
//Jenkins bootJar, bootRun 설정
//bootJar {
//    mainClassName = 'com.project.joopging.JoopgingApplication'
//}
//
//bootRun {
//    String activeProfile = System.properties['spring.profiles.active']
//    systemProperty "spring.profiles.active", activeProfile
//}